# -*- coding: utf-8 -*-

import numpy as np
import matplotlib.pyplot as plt


def fBm(n, H, t):
    """
    生成具有 Hurst 指数 H 的 fBm 路径

    参数：
    - n：路径的长度
    - H：Hurst 指数，控制长期相关性

    返回值：
    - path：fBm 路径
    """
    # 生成标准布朗运动
    dt = t[1] - t[0]
    W = np.zeros(n)

    for i in range(1, n):
        dW = np.random.normal() * np.sqrt(dt)
        W[i] = W[i - 1] + dW

    # 计算 fBm 路径
    R = np.zeros(n)
    for i in range(1, n):
        if t[i] == 0:
            R[i] = 0
        else:
            # 计算路径上每个点的值
            R[i] = (t[i] ** (2 * H)) / (2 * H * (2 * H - 1)) * np.sum(
                [(t[i] - s) ** (2 * H - 1) * W[int(s / dt)] for s in np.linspace(0, t[i], i)])

    # 减去路径的均值，使路径均值为 0
    R = R - np.mean(R)

    return R


# 拧紧曲线的数据
tightening_data = [
    0.5, 0.3, 0.3, 0.3, 0.3, 0.5, 0.3, 0.3, 0.3, 0.3,
    0.3, 0.3, 0.4, 0.4, 0.4, 0.5, 0.3, 0.3, 0.3, 0.5,
    0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.2,
    0.1, 0.5, 0.5, 0.3, 0.4, 0.3, 0.3, 0.2, 0.3, 0.3,
    0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3,
    0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 0.3, 0.3,
    0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 0.3, 0.3, 0.5, 0.4,
    0.3, 0.3, 0.3, 0.5, 0.2, 0.3, 0.3, 0.3, 0.3, 0.3,
    0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 0.4, 0.3,
    0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 0.3, 0.3, 0.3, 0.3,
    0.3, 0.3, 0.4, 0.4, 0.4, 0.3, 0.5, 0.4, 0.3, 0.4,
    0.3, 0.3, 0.3, 0.5, 0.3, 0.3, 0.5, 0.5, 0.5, 0.4,
    0.5, 0.5, 0.5, 0.5, 0.5, 0.4, 0.5, 0.5, 0.5, 0.5,
    0.4, 0.5, 0.5, 0.4, 0.5, 0.5, 0.5, 0.7, 0.8, 0.9,
    1.0, 0.8, 0.8, 0.7, 0.7, 0.8, 0.9, 0.7, 0.7, 0.8,
    0.6, 0.9, 0.8, 0.8, 0.8, 0.8, 0.8, 0.9, 0.8, 0.9,
    1.0, 0.7, 1.0, 1.0, 0.8, 1.0, 1.0, 0.8, 0.6, 0.7,
     1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.1, 1.0, 1.0, 0.9,
    1.0, 1.0, 0.8, 0.8, 0.9, 0.9, 0.6, 0.8, 0.7, 0.9,
    0.9, 1.0, 1.0, 1.1, 1.0, 1.0, 1.0, 1.0, 0.8, 0.8,
    1.0, 0.8, 0.8, 0.6, 0.9, 1.0, 0.8, 0.8, 0.8, 0.8,
    0.9, 1.0, 1.0, 1.1, 0.9, 0.9, 0.8, 0.8, 0.9, 0.7,
    0.8, 0.6, 0.8, 0.9, 1.0, 1.0, 0.9, 0.9, 0.9, 1.0,
    0.9, 1.0, 1.0, 0.9, 1.0, 1.0, 0.7, 0.8, 0.6, 0.8,
    0.8, 0.9, 0.8, 0.6, 0.7, 0.7, 0.7, 0.6, 0.8, 0.8,
    0.8, 1.0, 0.8, 0.8, 0.8, 0.8, 0.8, 0.9, 0.8, 0.7,
    0.8, 0.8, 0.8, 0.9, 0.8, 1.0, 0.9, 0.7, 0.8, 0.6,
    0.6, 0.5, 0.5, 0.6, 0.7, 0.6, 0.6, 0.6, 0.8, 0.7,
    0.8, 0.6, 0.8, 0.7, 0.6, 0.7, 0.6, 0.6, 0.8, 0.6,
    0.6, 0.8, 0.8, 0.9, 0.8, 0.7, 0.8, 0.8, 0.8, 0.6,
    0.6, 0.6, 0.6, 0.7, 0.6, 0.6, 0.6, 0.7, 0.6, 0.6,
    0.6, 0.7, 0.6, 0.6, 0.6, 0.6, 0.7, 0.7, 0.6, 0.8,
    0.8, 0.6, 0.8, 0.7, 0.8, 0.8, 0.7, 0.7, 0.6, 0.8,
    0.8, 0.6, 0.9, 0.9, 0.8, 0.7, 0.6, 0.8, 0.6, 0.6,
    0.6, 0.6, 0.7, 0.6, 0.7, 0.6, 0.6, 0.8, 0.7, 0.7,
    0.8, 0.8, 0.6, 0.7, 0.7, 0.6, 0.5, 0.7, 0.6, 0.7,
    0.8, 0.8, 0.6, 0.8, 0.7, 0.7, 1.0, 1.3, 1.5, 2.2,
    2.4, 2.8, 2.8, 3.4, 3.9, 4.5, 4.9, 6.2, 6.6, 7.3,
    7.3, 7.4, 9.5, 10.1, 10.1, 10.3, 15.7, 20.5, 20.5,
    20.8, 22.1, 23.7, 25.4, 27.1, 28.3, 29.2, 29.9, 30.7,
    31.8, 33.0, 34.5, 35.8, 36.8, 37.1, 37.7, 40.0, 40.0,
    40.3, 41.8, 43.0, 43.9, 44.5, 45.3, 46.2, 47.4, 48.3,
    49.4, 50.6, 51.9, 53.2, 54.5, 55.6, 56.7, 57.7, 58.8,
    59.8, 60.3, 61.0, 62.4, 63.5, 64.4, 65.5, 66.6, 67.8,
    68.5, 70.1, 71.1, 71.9, 72.7, 73.6, 74.5, 75.5, 76.8,
    78.2, 79.5, 80.8, 81.9, 83.2, 83.9, 84.6, 85.8, 86.5,
    86.9, 87.8, 88.6, 89.7, 90.5, 91.7, 92.8, 93.3, 94.2,
    95.5, 97.0, 97.5, 98.6, 99.8, 100.9, 101.1, 101.2,
    101.8, 102.3, 102.5, 103.1, 103.7, 104.2, 104.5,
    105.3, 106.4, 106.9, 107.4, 108.2, 108.9, 109.2,
    109.4, 110.0, 111.1, 111.9, 111.7, 112.4, 113.0,
    113.2, 113.2, 113.3, 72.0, 33.8, 13.4, 12.9, 1.5,
    1.4, 3.1
]

# 路径长度和 Hurst 指数
n = len(tightening_data)
H = 0.5

# 生成 fBm 路径
path = fBm(n, H, tightening_data)

# 绘制 fBm 路径
plt.figure(figsize=(10, 5))
plt.plot(path, label='fBm Path')
plt.plot(tightening_data, label='Tightening Curve', linestyle='--')
plt.title(f"Fractional Brownian Motion (fBm) with Hurst exponent H={H}")
plt.xlabel("Time")
plt.ylabel("Value")
plt.legend()
plt.show()

